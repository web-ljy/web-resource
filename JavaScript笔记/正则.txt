正则的项目实战作用：

1、表单验证：验证用户输入的内容是否符合我们设定的规则，例如：邮箱、电话、密码。

2、 数据采集：在一堆数据中把我们需要的数据获取到，例如：

    1:) URL传参（？传参）

    // queryURLParameter    -> {mid: 'xxx',name: 'xxx'}

     
    2:) 信息采集侠（信息盗取小偷）


总的来说正则（用来处理字符串的一个规则）的作用：

    正则就是用来处理字符串：有两方面匹配字符串的格式是否符合既定的格式（正则的匹配）、

                            把一个字符串中符合既定的内容获取到（正则的捕获）。

test() -> 匹配


exec() -> 捕获


3、任何把一个规则用正则制定出来?

   每个正则都是由元字符和修饰符两部分组成:

   [修饰符] -> i/m/g

   g(global) ->全局匹配
   
   i(ignoreCase) ->忽略大小写匹配

   m(m)


   元字符：只要在//两个斜杠之间包含的字符都是元字符。

   ① 具有特殊意义的元字符  

      \d -> 匹配一个0-9的数字,相当于[0-9],和它相反的是\D ->匹配一个除了0-9的任意字符

      \w -> 匹配一个0-9、a-z、A-Z、_的数字或字符,相当于[0-9a-zA-Z_]

      \s -> 匹配一个空白字符(空格、制表符...)

      \b -> 匹配一个单词的边界

      \t -> 匹配一个制表符

      \n -> 匹配一个换行

       . -> 匹配一个除了\n以外的任意字符

       ^ -> 以某一个元字符开头

       $ -> 以某一个元字符结尾

       \ -> 转义字符

     x|y -> x或者y的一个

   [xyz] -> x、y、z中的任意一个

  [^xyz] -> 除了xyz中的任意一个字符

   [a-z] -> 匹配a-z中的任意一个字符

  [^a-z] -> 匹配除了a-z中的任意一个字符

      () -> 正则中的分组  

      注意：(1)在[]中括号中出现的所有字符（不管之前代表什么意思），在这里都是只代表本身的意思。
               例如：reg = /[.]/;这里的点不是任意字符而是本身的点.
            
            (2)在中括号中出现的两位数不是一个两位数的集合，而是表示左边是左边的；右边是右边的。

            (3)在中括号中"-"出现中杠号是表示具有连字符的作用，如果只想表示"-",需要把其放在末尾。
               例如：var = /^[12-]$/;

   ② 代表出现次数的"量词元字符" （6个）

      + ：出现一到多次

      ? : 出现零到1次

      * : 出现零到多次
   
     {n}: 出现n次

     {n,}:出现n到多次
            
     {n,m}:出现n-m次   
 
   ③



写正则:(思想)
分析需求的特点:
   然后划分成几块
   一块块的写


正则的捕获分为两个阶段：

   匹配：首先验证字符串和正则是否匹配，不匹配的话捕获到的结果为null;

   捕获：把正则匹配到的内容捕获到；捕获到的结果是一个数组，数组的第一项是当前正则匹配捕获的内容；

         index:捕获的开始索引位置

         input:捕获的原始字符串 

         


