一、事件传播：分为两个阶段（第一阶段是"捕获"、第二阶段是"冒泡"）

    1:) 冒泡传播：当前元素的某一个行为被触发，那么它所有的父元素的相关行为都会被触发。

        ev = ev || window.ev;(鼠标事件对象存储的是当前本次操作鼠标的相关信息)

        ev.stopPropagation ? ev.stopPropagation() : ev.cancelBubble = true;(阻止冒泡事件兼容处理)


    2:) ev.preventDefault:阻止默认行为的方法,在IE6~8下使用e.returnValue=false;来进行兼容处理
        
        ev.preventDefault ? ev.preventDefault() : ev.returnValue = false;


二、事件委托：利用了事件的冒泡传播机制，如果一个容器中有很多的后代元素需要绑定点击事件(其它行为同样可以),

              这样的话就不需要一个个的获取绑定了,只需要给最外层的容器绑定一个点击事件即可,

              这样不管里面哪个元素触发了点击的行为,那么点击行为对应的方法都会执行,

              我们在这里通过判断事件源是谁来实现不同的操作即可。

       //->   我们使用事件委托处理多元素的事件绑定会比一个个的绑定性能提高至少一倍

       var curTar = ev.target || ev.srcElement;



语法区别、控制对象区别、事件对象ev的区别



